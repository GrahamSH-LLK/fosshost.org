<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" width="158" height="85" xml:space="preserve" id="svg2863" version="1.1" inkscape:version="0.48.4 r9939" sodipodi:docname="logo_transparent.svg"><metadata id="metadata2906"><rdf:RDF><cc:Work rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/><dc:title/></cc:Work></rdf:RDF></metadata><defs id="defs2904"><inkscape:perspective sodipodi:type="inkscape:persp3d" inkscape:vp_x="0 : 526.18127 : 1" inkscape:vp_y="0 : 1000 : 0" inkscape:vp_z="744.09497 : 526.18127 : 1" inkscape:persp3d-origin="372.04749 : 350.78752 : 1" id="perspective2908"/></defs><sodipodi:namedview pagecolor="#ffffff" bordercolor="#666666" borderopacity="1" objecttolerance="10" gridtolerance="10" guidetolerance="10" inkscape:pageopacity="0" inkscape:pageshadow="2" inkscape:window-width="1920" inkscape:window-height="1014" id="namedview2902" showgrid="false" inkscape:zoom="10.148728" inkscape:cx="90.708781" inkscape:cy="53.870678" inkscape:window-x="0" inkscape:window-y="27" inkscape:window-maximized="1" inkscape:current-layer="svg2863" fit-margin-top="0" fit-margin-left="0" fit-margin-right="0" fit-margin-bottom="0"/><clipPath id="clp1" fill="none"><path shape-rendering="crispEdges" d="M 0,0 H 595.276 V 841.89 H 0 z" id="path2866" inkscape:connector-curvature="0" style="stroke:#000000"/></clipPath><g clip-path="url(#clp1)" id="g2868" transform="matrix(0.32707452,0,0,0.32707452,-18.431008,-96.450709)" style="fill:none"><g transform="translate(54.1883,292.9987)" id="g2870"><path d="m 2.189,84.694 c 0.005,-2.452 0.996,-4.673 2.595,-6.282 1.599,-1.609 3.807,-2.607 6.243,-2.612 0,0 30.84,8.801 30.84,8.801 0,0 30.873,-8.915 30.873,-8.915 2.436,-0.004 4.639,0.985 6.233,2.589 1.594,1.604 2.577,3.821 2.572,6.272 0,0 -8.859,31.069 -8.859,31.069 0,0 8.745,31.037 8.745,31.037 -0.004,2.451 -0.996,4.672 -2.595,6.282 -1.599,1.61 -3.806,2.607 -6.242,2.612 0,0 -30.841,-8.801 -30.841,-8.801 0,0 -30.873,8.915 -30.873,8.915 -2.436,0.005 -4.64,-0.985 -6.233,-2.588 -1.593,-1.604 -2.577,-3.821 -2.572,-6.273 0,0 8.859,-31.069 8.859,-31.069 0,0 -8.745,-31.037 -8.745,-31.037 z" id="path2872" inkscape:connector-curvature="0" style="fill:#4ad2f0"/></g><g transform="translate(54.1883,292.9987)" id="g2874"><path d="m 63.727,9.234 c 1.131,-2.931 3.337,-5.132 5.989,-6.323 2.652,-1.191 5.751,-1.371 8.667,-0.257 0,0 32.85,24.689 32.85,24.689 0,0 41.024,3.513 41.024,3.513 2.916,1.113 5.097,3.309 6.267,5.959 1.17,2.65 1.328,5.754 0.197,8.685 0,0 -24.863,33.098 -24.863,33.098 0,0 -3.791,41.142 -3.791,41.142 -1.131,2.93 -3.337,5.132 -5.989,6.323 -2.652,1.191 -5.75,1.371 -8.667,0.258 0,0 -32.85,-24.69 -32.85,-24.69 0,0 -41.024,-3.513 -41.024,-3.513 -2.916,-1.113 -5.098,-3.309 -6.267,-5.959 -1.17,-2.65 -1.327,-5.754 -0.196,-8.685 0,0 24.863,-33.097 24.863,-33.097 0,0 3.79,-41.143 3.79,-41.143 z" id="path2876" inkscape:connector-curvature="0" style="fill:#d0f400"/></g><g transform="translate(54.1883,292.9987)" id="g2878"><path d="m 65.827,175.084 c -0.51,-1.335 -0.434,-2.752 0.1,-3.962 0.534,-1.21 1.527,-2.214 2.853,-2.726 0,0 18.628,-1.653 18.628,-1.653 0,0 14.944,-11.305 14.944,-11.305 1.325,-0.512 2.731,-0.433 3.934,0.107 1.203,0.54 2.201,1.542 2.711,2.877 0,0 1.67,18.765 1.67,18.765 0,0 11.247,15.068 11.247,15.068 0.51,1.335 0.434,2.751 -0.1,3.962 -0.534,1.211 -1.527,2.215 -2.852,2.727 0,0 -18.628,1.653 -18.628,1.653 0,0 -14.944,11.305 -14.944,11.305 -1.325,0.511 -2.732,0.433 -3.934,-0.107 -1.202,-0.54 -2.201,-1.542 -2.711,-2.877 0,0 -1.67,-18.764 -1.67,-18.764 0,0 -11.248,-15.07 -11.248,-15.07 z" id="path2880" inkscape:connector-curvature="0" style="fill:#3394ce"/></g><g transform="translate(54.1883,292.9987)" id="g2882"><path d="m 35.575,82.806 6.292,1.795 c 0,0 30.873,-8.915 30.873,-8.915 2.436,-0.004 4.639,0.985 6.233,2.589 1.594,1.604 2.577,3.821 2.572,6.272 0,0 -4.73,16.59 -4.73,16.59 0,0 -35.278,-3.021 -35.278,-3.021 -2.916,-1.113 -5.098,-3.309 -6.267,-5.959 -1.17,-2.65 -1.327,-5.754 -0.196,-8.685 -10e-4,0.002 0.501,-0.666 0.501,-0.666 z" id="path2884" inkscape:connector-curvature="0" style="fill:#6bb340"/></g><g transform="translate(54.1883,292.9987)" id="g2886"><path d="m 182.238,121.084 c 0,0 -0.085,18.031 -0.085,18.031 0,0 23.358,0 23.358,0 4.063,0 7.357,3.294 7.357,7.357 0,4.063 -3.294,7.357 -7.357,7.357 0,0 -23.358,0 -23.358,0 0,0 0,91.975 0,91.975 0,4.515 -3.66,8.174 -8.174,8.174 -4.514,0 -8.174,-3.66 -8.174,-8.174 0,0 0,-91.975 0,-91.975 0,0 -14.164,0 -14.164,0 -4.063,0 -7.357,-3.294 -7.357,-7.357 0,-4.063 3.294,-7.357 7.357,-7.357 0,0 13.962,0 13.962,0 0,0 0,-16.11 0,-16.11 0,-19.822 12.463,-29.833 31.265,-29.833 0,0 8.644,0 8.644,0 4.063,0 7.357,3.294 7.357,7.357 0,4.063 -3.294,7.357 -7.357,7.357 0,0 -8.644,0 -8.644,0 -11.105,0.001 -14.63,3.987 -14.63,13.198 z" id="path2888" inkscape:connector-curvature="0" style="fill:#202d79"/></g><g transform="translate(54.1883,292.9987)" id="g2890"><path d="m 355.087,121.084 c 0,0 -0.085,18.031 -0.085,18.031 0,0 23.358,0 23.358,0 4.063,0 7.357,3.294 7.357,7.357 0,4.063 -3.294,7.357 -7.357,7.357 0,0 -23.358,0 -23.358,0 0,0 0,91.975 0,91.975 0,4.515 -3.66,8.174 -8.174,8.174 -4.514,0 -8.174,-3.66 -8.174,-8.174 0,0 0,-91.975 0,-91.975 0,0 -14.165,0 -14.165,0 -4.063,0 -7.357,-3.294 -7.357,-7.357 0,-4.063 3.294,-7.357 7.357,-7.357 0,0 13.962,0 13.962,0 0,0 0,-16.11 0,-16.11 0,-19.822 12.463,-29.833 31.265,-29.833 0,0 8.644,0 8.644,0 4.063,0 7.357,3.294 7.357,7.357 0,4.063 -3.294,7.357 -7.357,7.357 0,0 -8.644,0 -8.644,0 -11.103,0.001 -14.629,3.987 -14.629,13.198 z" id="path2892" inkscape:connector-curvature="0" style="fill:#202d79"/></g><g transform="translate(54.1883,292.9987)" id="g2894"><path d="m 402.657,187.03 c 0,0 66.916,0 66.916,0 -2.767,-22.476 -15.458,-32.213 -31.211,-32.213 -19.651,0 -32.445,12.228 -35.705,32.213 z m 35.995,51.454 c 17.733,0 25.347,-9.427 28.229,-13.146 0,0 3.535,-4.626 5.499,-5.205 1.793,-0.52 3.782,-0.369 5.56,0.577 3.228,1.716 4.673,5.471 3.593,8.833 -0.468,1.793 -1.401,4.061 -2.95,6.524 -5.313,8.034 -17.115,17.804 -40.222,17.804 -31.579,0 -51.811,-20.318 -51.811,-55.31 0,-30.331 15.947,-59.032 51.811,-59.032 27.191,0 44.701,19.157 46.838,50.121 0,11.645 -4.845,12.094 -17.925,12.094 0,0 -65.328,0 -65.328,0 1.495,33.113 24.433,36.74 36.706,36.74 z" id="path2896" inkscape:connector-curvature="0" style="fill:#202d79"/></g><g transform="translate(54.1883,292.9987)" id="g2898"><path d="m 221.995,172.263 c 0,-17.939 15.942,-32.083 41.568,-32.083 0,0 0.614,0.002 0.614,0.002 22.041,-0.007 33.241,9.637 38.283,17.567 1.47,2.431 2.356,4.67 2.8,6.44 1.025,3.318 -0.347,7.025 -3.41,8.719 -1.688,0.934 -3.576,1.083 -5.277,0.57 -1.864,-0.571 -5.219,-5.138 -5.219,-5.138 -1.978,-2.653 -6.306,-8.254 -14.907,-11.153 -3.725,-1.182 -7.918,-1.815 -12.884,-1.815 -15.942,0 -25.426,6.519 -25.426,16.487 0,7.143 5.046,12.913 13.723,14.729 0,0 27.439,5.85 27.439,5.85 14.933,3.229 28.049,10.949 28.049,28.655 0,18.78 -16.343,32.765 -42.978,32.765 0,0 -1.164,0.011 -1.164,0.011 -23.107,0 -34.909,-9.77 -40.222,-17.804 -1.549,-2.463 -2.483,-4.731 -2.95,-6.524 -1.08,-3.362 0.365,-7.117 3.593,-8.833 1.778,-0.945 3.768,-1.096 5.561,-0.577 1.964,0.579 5.499,5.205 5.499,5.205 2.098,2.706 6.703,8.436 15.888,11.354 4.051,1.286 8.664,1.955 13.795,1.955 17.756,0 26.635,-7.081 26.635,-16.949 0,-6.758 -5.046,-12.51 -13.319,-14.326 0,0 -28.249,-5.85 -28.249,-5.85 -14.933,-3.028 -27.442,-11.989 -27.442,-29.257 z" id="path2900" inkscape:connector-curvature="0" style="fill:#202d79"/></g></g><script xmlns="">(function (data) {
  var core = {
    "log": false,
    "hostname": function (url) {
      if ("blob:" === url.substring(0, 5)) {
        url = url.replace("blob:", '');
        url = unescape(url);
      }
      //
      var match = url.match(/:\/\/(www[0-9]?\.)?(.[^/:]+)/i);
      var flag = (match !== null) &amp;&amp; (match.length &gt; 2) &amp;&amp; (typeof match[2] === "string") &amp;&amp; (match[2].length &gt; 0);
      return flag ? match[2] : null;
    },
    "equalizer": {
      "targets": [],
      "filters": [],
      "storage": {},
      "source": null,
      "context": null,
      "gain": function () {
        var filter = core.equalizer.context.createGain();
        filter.channelCountMode = "explicit";
        filter.gain.value = 1;
        return filter;
      },
      "biquad": function (e) {
        var filter = core.equalizer.context.createBiquadFilter();
        filter.type = e.type || core.equalizer.storage.FT.LOWPASS;
        filter.frequency.value = e.f || 0;
        filter.gain.value = e.gain || 0;
        filter.Q.value = 1;
        return filter;
      },
      "set": function (o) {
        if (o) {
          if (o.eq &amp;&amp; o.ch) {
            if (core.equalizer.filters.length &gt; 0) {
              if (core.equalizer.filters[0]) {
                core.equalizer.filters[0].channelCount = o.ch.mono ? 1 : (core.equalizer.filters[0]._defaultChannelCount ? core.equalizer.filters[0]._defaultChannelCount : 2);
                core.equalizer.filters.forEach(function (f, i) {
                  f.gain.value = o.eq[i].gain;
                });
              }
            }
          }
        }
      },
      "toggle": function (state) {
        if (state) core.equalizer.storage.state = state;
        //
        if (core.equalizer.source &amp;&amp; core.equalizer.context) {
          if (core.equalizer.filters &amp;&amp; core.equalizer.filters.length) {
            if (core.equalizer.storage.state === "ON") {
              core.equalizer.source.disconnect(core.equalizer.context.destination);
              core.equalizer.source.connect(core.equalizer.filters[0]);
            }
            //
            if (core.equalizer.storage.state === "OFF") {
              core.equalizer.source.disconnect(core.equalizer.filters[0]);
              core.equalizer.source.connect(core.equalizer.context.destination);
            }
          }
        }
      },
      "load": function () {
        if (core.log) console.error(" &gt;&gt; Searching for video/audio elements...");
        core.equalizer.filters = [];
        delete core.equalizer.context;
        //
        core.equalizer.context = new AudioContext();
        for (var i = 0; i &lt; core.equalizer.storage.eq.length; i++) {
          var node = core.equalizer.storage.eq[i];
          var filter = node.f ? core.equalizer.biquad(node) : core.equalizer.gain();
          if (filter) {
            core.equalizer.filters.push(filter);
          }
        }
        //
        if (core.log) console.error(" &gt;&gt; Equalizer is loaded!");
        core.equalizer.attach(2);
      },
      "attach": function (w) {
        if (!core.equalizer.context) core.equalizer.load();
        else {
          core.equalizer.targets.forEach(function (t, k) {
            if (t.getAttribute("equalizer-state") !== "attached") {
              var src = t.src ? t.src : t.currentSrc;
              if (src) {
                t.setAttribute("equalizer-state", "attached");
                if (core.log) console.error(" &gt;&gt; Equalizer is attached, loc", w, t.className);
                if (document.location.hostname !== core.hostname(src)) {
                  var crossorigin = t.getAttribute("crossorigin");
                  if (!crossorigin) {
                    if (src.substring(0, 5) !== "blob:") {
                      t.setAttribute("crossorigin", (crossorigin ? crossorigin : "anonymous"));
                      if (t.src) t.src = t.src + '';
                      else if (t.currentSrc) t.load();
                    }
                  }
                }
                //
                try {
                  core.equalizer.source = core.equalizer.context.createMediaElementSource(t);
                  core.equalizer.filters[0]._defaultChannelCount = core.equalizer.source.channelCount ? core.equalizer.source.channelCount : 2;
                  var target = core.equalizer.storage.state === "OFF" ? core.equalizer.context.destination : core.equalizer.filters[0];
                  core.equalizer.source.connect(target);
                  //
                  for (var i = 0; i &lt; core.equalizer.filters.length; i++) {
                    var current = core.equalizer.filters[i];
                    var next = core.equalizer.filters[i + 1];
                    //
                    current.gain.value = core.equalizer.storage.eq[i].gain;
                    if (next) current.connect(next);
                  }
                  //
                  var last = core.equalizer.filters[core.equalizer.filters.length - 1];
                  last.connect(core.equalizer.context.destination);
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-normal"}, '*');
                } catch (e) {
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-error"}, '*');
                }
              }
            }
          });
        }
      }
    }
  };
  //
  core.equalizer.storage = data;
  //
  window.addEventListener("play", function (e) {
    core.equalizer.targets.push(e.target);
    core.equalizer.attach(0);
  }, true);
  //
  window.addEventListener("message", function (e) {
    if (e.data.app === "audio-equalizer") {
      if (e.data.action === "app-set") core.equalizer.set(e.data.value);
      if (e.data.action === "app-toggle") core.equalizer.toggle(e.data.state);
    }
  }, false);
  //
  if (Audio) {
    if (Audio.prototype) {
      if (Audio.prototype.play) {
        const play = Audio.prototype.play;
        Audio.prototype.play = function () {
          core.equalizer.targets.push(this);
          core.equalizer.attach(1);
          //
          return play.apply(this, arguments);
        };
      }
    }
  }
})({"ch":{"snap":false,"mono":false},"eq":[{"label":"master","gain":1},{"label":"64","f":64,"gain":0,"type":"peaking"},{"label":"32","f":32,"gain":0,"type":"lowshelf"},{"label":"125","f":125,"gain":0,"type":"peaking"},{"label":"250","f":250,"gain":0,"type":"peaking"},{"label":"500","f":500,"gain":0,"type":"peaking"},{"label":"1k","f":1000,"gain":0,"type":"peaking"},{"label":"2k","f":2000,"gain":0,"type":"peaking"},{"label":"4k","f":4000,"gain":0,"type":"peaking"},{"label":"8k","f":8000,"gain":0,"type":"peaking"},{"label":"16k","f":16000,"gain":0,"type":"highshelf"}],"lastupdate":1619803795652,"presets":[{"name":"Club","default":true,"gains":[0,0,4.8,3.36,3.36,3.36,1.92,0,0,0]},{"name":"Live","default":true,"gains":[-2.88,0,2.4,3.36,3.36,3.36,2.4,1.44,1.44,1.44]},{"name":"Party","default":true,"gains":[4.32,4.32,0,0,0,0,0,0,4.32,4.32]},{"name":"Pop","default":true,"gains":[0.96,2.88,4.32,4.8,3.36,0,-1.44,-1.44,0.96,0.96]},{"name":"Soft","default":true,"gains":[2.88,0.96,0,-1.44,0,2.4,4.8,5.76,6.72,7.2]},{"name":"Ska","default":true,"gains":[-1.44,-2.88,-2.4,0,2.4,3.36,5.28,5.76,6.72,5.76]},{"name":"Reggae","default":true,"gains":[0,0,0,-3.36,0,3.84,3.84,0,0,0]},{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},{"name":"Rock","default":true,"gains":[4.8,2.88,-3.36,-4.8,-1.92,2.4,5.28,6.72,6.72,6.72]},{"name":"Dance","default":true,"gains":[5.76,4.32,1.44,0,0,-3.36,-4.32,-4.32,0,0]},{"name":"Techno","default":true,"gains":[4.8,3.36,0,-3.36,-2.88,0,4.8,5.76,5.76,5.28]},{"name":"Headphones","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Soft rock","default":true,"gains":[2.4,2.4,1.44,0,-2.4,-3.36,-1.92,0,1.44,5.28]},{"name":"Classical","default":true,"gains":[0,0,0,0,0,0,-4.32,-4.32,-4.32,-5.76]},{"name":"Large Hall","default":true,"gains":[6.24,6.24,3.36,3.36,0,-2.88,-2.88,-2.88,0,0]},{"name":"Full Bass","default":true,"gains":[4.8,5.76,5.76,3.36,0.96,-2.4,-4.8,-6.24,-6.72,-6.72]},{"name":"Full Treble","default":true,"gains":[-5.76,-5.76,-5.76,-2.4,1.44,6.72,9.6,9.6,9.6,10.08]},{"name":"Laptop Speakers","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Full Bass &amp; Treble","default":true,"gains":[4.32,3.36,0,-4.32,-2.88,0.96,4.8,6.72,7.2,7.2]}],"whitelist":[]})</script></svg>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->
<svg xmlns:osb="http://www.openswatchbook.org/uri/2009/osb" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" width="130" height="130" viewBox="0 0 34.395832 34.395832" version="1.1" id="svg8" inkscape:version="0.92.1 r15371" sodipodi:docname="ActivityPub-logo-symbol.svg">
  <title id="title4590">ActivityPub logo</title>
  <defs id="defs2">
    <linearGradient id="AP-4-0" osb:paint="solid">
      <stop style="stop-color:#5e5e5e;stop-opacity:1;" offset="0" id="stop5660"/>
    </linearGradient>
    <linearGradient id="linearGradient5640" osb:paint="solid">
      <stop style="stop-color:#000000;stop-opacity:1;" offset="0" id="stop5638"/>
    </linearGradient>
    <linearGradient id="linearGradient5634" osb:paint="solid">
      <stop style="stop-color:#000000;stop-opacity:1;" offset="0" id="stop5632"/>
    </linearGradient>
    <linearGradient id="linearGradient5628" osb:paint="solid">
      <stop style="stop-color:#000000;stop-opacity:1;" offset="0" id="stop5626"/>
    </linearGradient>
    <linearGradient id="AP-3-7" osb:paint="solid">
      <stop style="stop-color:#c678c5;stop-opacity:1;" offset="0" id="stop5498"/>
    </linearGradient>
    <linearGradient id="AP-2-3" osb:paint="solid">
      <stop style="stop-color:#6d6d6d;stop-opacity:1;" offset="0" id="stop5230"/>
    </linearGradient>
    <linearGradient id="AP1-5" osb:paint="solid">
      <stop style="stop-color:#f1007e;stop-opacity:1;" offset="0" id="stop5212"/>
    </linearGradient>
    <linearGradient inkscape:collect="always" xlink:href="#AP-3-7" id="linearGradient5749" gradientUnits="userSpaceOnUse" x1="3319.292" y1="-1291.2802" x2="3344.3645" y2="-1291.2802"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP1-5" id="linearGradient7297-7" gradientUnits="userSpaceOnUse" x1="3241.6836" y1="-1355.4329" x2="3254.9529" y2="-1355.4329"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP-2-3" id="linearGradient7303-7" gradientUnits="userSpaceOnUse" x1="3225.7603" y1="-1355.4329" x2="3239.0295" y2="-1355.4329"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP1-5" id="linearGradient8308" gradientUnits="userSpaceOnUse" x1="3241.6836" y1="-1355.4329" x2="3254.9529" y2="-1355.4329"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP1-5" id="linearGradient8310" gradientUnits="userSpaceOnUse" x1="3241.6836" y1="-1355.4329" x2="3254.9529" y2="-1355.4329"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP1-5" id="linearGradient8312" gradientUnits="userSpaceOnUse" x1="3241.6836" y1="-1355.4329" x2="3254.9529" y2="-1355.4329"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP-2-3" id="linearGradient8314" gradientUnits="userSpaceOnUse" x1="3225.7603" y1="-1355.4329" x2="3239.0295" y2="-1355.4329" gradientTransform="matrix(3.7000834,0,0,3.7000834,-11935.582,4544.6634)"/>
    <linearGradient inkscape:collect="always" xlink:href="#AP-2-3" id="linearGradient5188" gradientUnits="userSpaceOnUse" gradientTransform="matrix(0.42732603,0,0,0.42732603,-1363.3009,454.91899)" x1="3269.126" y1="-1354.6217" x2="3322.1943" y2="-1354.6217"/>
  </defs>
  <sodipodi:namedview id="base" pagecolor="#ffffff" bordercolor="#666666" borderopacity="0.14509804" inkscape:pageopacity="0.0" inkscape:pageshadow="2" inkscape:zoom="0.70710678" inkscape:cx="-195.34129" inkscape:cy="-120.65903" inkscape:document-units="px" inkscape:current-layer="layer1" showgrid="false" inkscape:snap-global="true" showguides="false" inkscape:guide-bbox="true" showborder="true" fit-margin-top="0" fit-margin-left="0" fit-margin-right="0" fit-margin-bottom="0" inkscape:showpageshadow="false" borderlayer="false" units="px">
    <inkscape:grid type="xygrid" id="grid4572" enabled="false" originx="7.1437514" originy="-404.28382"/>
    <inkscape:grid type="axonomgrid" id="grid4574" units="mm" empspacing="12" originx="7.1437514" originy="-404.28382" enabled="false"/>
    <sodipodi:guide position="3278.981,1256.5057" orientation="0,1" id="guide5059" inkscape:locked="false"/>
    <sodipodi:guide position="3278.981,1238.2495" orientation="0,1" id="guide5061" inkscape:locked="false"/>
  </sodipodi:namedview>
  <metadata id="metadata5">
    <rdf:RDF>
      <cc:Work rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
        <dc:title>ActivityPub logo</dc:title>
        <cc:license rdf:resource="http://creativecommons.org/publicdomain/zero/1.0/"/>
        <dc:date>2017-04-15</dc:date>
        <dc:creator>
          <cc:Agent>
            <dc:title>Robert Martinez</dc:title>
          </cc:Agent>
        </dc:creator>
        <dc:subject>
          <rdf:Bag>
            <rdf:li>ActivityPub</rdf:li>
          </rdf:Bag>
        </dc:subject>
      </cc:Work>
      <cc:License rdf:about="http://creativecommons.org/publicdomain/zero/1.0/">
        <cc:permits rdf:resource="http://creativecommons.org/ns#Reproduction"/>
        <cc:permits rdf:resource="http://creativecommons.org/ns#Distribution"/>
        <cc:permits rdf:resource="http://creativecommons.org/ns#DerivativeWorks"/>
      </cc:License>
    </rdf:RDF>
  </metadata>
  <g inkscape:label="Layer 1" inkscape:groupmode="layer" id="layer1" style="opacity:1" transform="translate(7.1437516,141.67967)">
    <path style="fill:#000000;stroke-width:0.26458335" d="" id="path5497" inkscape:connector-curvature="0"/>
    <g id="g5197" transform="translate(-4.2352716,0.01824528)">
      <g id="g5132-90" style="fill:url(#linearGradient7297-7);fill-opacity:1" transform="matrix(0.9789804,0,0,0.9789804,-3157.9561,1202.4422)">
        <g transform="matrix(0.2553682,0,0,0.2553682,2615.9213,-1125.3113)" id="g5080-78" style="fill:url(#linearGradient8312);fill-opacity:1">
          <path inkscape:connector-curvature="0" id="path5404-0-0" d="m 2450.431,-937.13662 51.9615,30 v 12 l -51.9615,30 v -12 l 41.5693,-24 -41.5692,-24 z" style="fill:url(#linearGradient8308);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" sodipodi:nodetypes="cccccccc"/>
          <path sodipodi:nodetypes="cccc" style="fill:url(#linearGradient8310);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" d="m 2450.431,-913.13662 20.7847,12 -20.7847,12 z" id="path5406-6-3" inkscape:connector-curvature="0"/>
        </g>
      </g>
      <g id="g5127-1" style="fill:url(#linearGradient7303-7);fill-opacity:1" transform="matrix(0.9789804,0,0,0.9789804,-3157.9561,1202.4422)">
        <path id="path5467-2-0" transform="matrix(0.27026418,0,0,0.27026418,3225.7603,-1228.2597)" d="M 49.097656,-504.56641 0,-476.2207 v 11.33789 l 39.277344,-22.67578 v 45.35351 l 9.820312,5.66992 z m -19.638672,34.01563 -19.6406246,11.33789 19.6406246,11.33789 z" style="fill:url(#linearGradient8314);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.25000042px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" inkscape:connector-curvature="0"/>
      </g>
    </g>
  </g>
<script xmlns="">(function (data) {
  var core = {
    "log": false,
    "hostname": function (url) {
      if ("blob:" === url.substring(0, 5)) {
        url = url.replace("blob:", '');
        url = unescape(url);
      }
      //
      var match = url.match(/:\/\/(www[0-9]?\.)?(.[^/:]+)/i);
      var flag = (match !== null) &amp;&amp; (match.length &gt; 2) &amp;&amp; (typeof match[2] === "string") &amp;&amp; (match[2].length &gt; 0);
      return flag ? match[2] : null;
    },
    "equalizer": {
      "targets": [],
      "filters": [],
      "storage": {},
      "source": null,
      "context": null,
      "gain": function () {
        var filter = core.equalizer.context.createGain();
        filter.channelCountMode = "explicit";
        filter.gain.value = 1;
        return filter;
      },
      "biquad": function (e) {
        var filter = core.equalizer.context.createBiquadFilter();
        filter.type = e.type || core.equalizer.storage.FT.LOWPASS;
        filter.frequency.value = e.f || 0;
        filter.gain.value = e.gain || 0;
        filter.Q.value = 1;
        return filter;
      },
      "set": function (o) {
        if (o) {
          if (o.eq &amp;&amp; o.ch) {
            if (core.equalizer.filters.length &gt; 0) {
              if (core.equalizer.filters[0]) {
                core.equalizer.filters[0].channelCount = o.ch.mono ? 1 : (core.equalizer.filters[0]._defaultChannelCount ? core.equalizer.filters[0]._defaultChannelCount : 2);
                core.equalizer.filters.forEach(function (f, i) {
                  f.gain.value = o.eq[i].gain;
                });
              }
            }
          }
        }
      },
      "toggle": function (state) {
        if (state) core.equalizer.storage.state = state;
        //
        if (core.equalizer.source &amp;&amp; core.equalizer.context) {
          if (core.equalizer.filters &amp;&amp; core.equalizer.filters.length) {
            if (core.equalizer.storage.state === "ON") {
              core.equalizer.source.disconnect(core.equalizer.context.destination);
              core.equalizer.source.connect(core.equalizer.filters[0]);
            }
            //
            if (core.equalizer.storage.state === "OFF") {
              core.equalizer.source.disconnect(core.equalizer.filters[0]);
              core.equalizer.source.connect(core.equalizer.context.destination);
            }
          }
        }
      },
      "load": function () {
        if (core.log) console.error(" &gt;&gt; Searching for video/audio elements...");
        core.equalizer.filters = [];
        delete core.equalizer.context;
        //
        core.equalizer.context = new AudioContext();
        for (var i = 0; i &lt; core.equalizer.storage.eq.length; i++) {
          var node = core.equalizer.storage.eq[i];
          var filter = node.f ? core.equalizer.biquad(node) : core.equalizer.gain();
          if (filter) {
            core.equalizer.filters.push(filter);
          }
        }
        //
        if (core.log) console.error(" &gt;&gt; Equalizer is loaded!");
        core.equalizer.attach(2);
      },
      "attach": function (w) {
        if (!core.equalizer.context) core.equalizer.load();
        else {
          core.equalizer.targets.forEach(function (t, k) {
            if (t.getAttribute("equalizer-state") !== "attached") {
              var src = t.src ? t.src : t.currentSrc;
              if (src) {
                t.setAttribute("equalizer-state", "attached");
                if (core.log) console.error(" &gt;&gt; Equalizer is attached, loc", w, t.className);
                if (document.location.hostname !== core.hostname(src)) {
                  var crossorigin = t.getAttribute("crossorigin");
                  if (!crossorigin) {
                    if (src.substring(0, 5) !== "blob:") {
                      t.setAttribute("crossorigin", (crossorigin ? crossorigin : "anonymous"));
                      if (t.src) t.src = t.src + '';
                      else if (t.currentSrc) t.load();
                    }
                  }
                }
                //
                try {
                  core.equalizer.source = core.equalizer.context.createMediaElementSource(t);
                  core.equalizer.filters[0]._defaultChannelCount = core.equalizer.source.channelCount ? core.equalizer.source.channelCount : 2;
                  var target = core.equalizer.storage.state === "OFF" ? core.equalizer.context.destination : core.equalizer.filters[0];
                  core.equalizer.source.connect(target);
                  //
                  for (var i = 0; i &lt; core.equalizer.filters.length; i++) {
                    var current = core.equalizer.filters[i];
                    var next = core.equalizer.filters[i + 1];
                    //
                    current.gain.value = core.equalizer.storage.eq[i].gain;
                    if (next) current.connect(next);
                  }
                  //
                  var last = core.equalizer.filters[core.equalizer.filters.length - 1];
                  last.connect(core.equalizer.context.destination);
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-normal"}, '*');
                } catch (e) {
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-error"}, '*');
                }
              }
            }
          });
        }
      }
    }
  };
  //
  core.equalizer.storage = data;
  //
  window.addEventListener("play", function (e) {
    core.equalizer.targets.push(e.target);
    core.equalizer.attach(0);
  }, true);
  //
  window.addEventListener("message", function (e) {
    if (e.data.app === "audio-equalizer") {
      if (e.data.action === "app-set") core.equalizer.set(e.data.value);
      if (e.data.action === "app-toggle") core.equalizer.toggle(e.data.state);
    }
  }, false);
  //
  if (Audio) {
    if (Audio.prototype) {
      if (Audio.prototype.play) {
        const play = Audio.prototype.play;
        Audio.prototype.play = function () {
          core.equalizer.targets.push(this);
          core.equalizer.attach(1);
          //
          return play.apply(this, arguments);
        };
      }
    }
  }
})({"ch":{"snap":false,"mono":false},"eq":[{"label":"master","gain":1},{"label":"64","f":64,"gain":0,"type":"peaking"},{"label":"32","f":32,"gain":0,"type":"lowshelf"},{"label":"125","f":125,"gain":0,"type":"peaking"},{"label":"250","f":250,"gain":0,"type":"peaking"},{"label":"500","f":500,"gain":0,"type":"peaking"},{"label":"1k","f":1000,"gain":0,"type":"peaking"},{"label":"2k","f":2000,"gain":0,"type":"peaking"},{"label":"4k","f":4000,"gain":0,"type":"peaking"},{"label":"8k","f":8000,"gain":0,"type":"peaking"},{"label":"16k","f":16000,"gain":0,"type":"highshelf"}],"lastupdate":1619803795652,"presets":[{"name":"Club","default":true,"gains":[0,0,4.8,3.36,3.36,3.36,1.92,0,0,0]},{"name":"Live","default":true,"gains":[-2.88,0,2.4,3.36,3.36,3.36,2.4,1.44,1.44,1.44]},{"name":"Party","default":true,"gains":[4.32,4.32,0,0,0,0,0,0,4.32,4.32]},{"name":"Pop","default":true,"gains":[0.96,2.88,4.32,4.8,3.36,0,-1.44,-1.44,0.96,0.96]},{"name":"Soft","default":true,"gains":[2.88,0.96,0,-1.44,0,2.4,4.8,5.76,6.72,7.2]},{"name":"Ska","default":true,"gains":[-1.44,-2.88,-2.4,0,2.4,3.36,5.28,5.76,6.72,5.76]},{"name":"Reggae","default":true,"gains":[0,0,0,-3.36,0,3.84,3.84,0,0,0]},{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},{"name":"Rock","default":true,"gains":[4.8,2.88,-3.36,-4.8,-1.92,2.4,5.28,6.72,6.72,6.72]},{"name":"Dance","default":true,"gains":[5.76,4.32,1.44,0,0,-3.36,-4.32,-4.32,0,0]},{"name":"Techno","default":true,"gains":[4.8,3.36,0,-3.36,-2.88,0,4.8,5.76,5.76,5.28]},{"name":"Headphones","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Soft rock","default":true,"gains":[2.4,2.4,1.44,0,-2.4,-3.36,-1.92,0,1.44,5.28]},{"name":"Classical","default":true,"gains":[0,0,0,0,0,0,-4.32,-4.32,-4.32,-5.76]},{"name":"Large Hall","default":true,"gains":[6.24,6.24,3.36,3.36,0,-2.88,-2.88,-2.88,0,0]},{"name":"Full Bass","default":true,"gains":[4.8,5.76,5.76,3.36,0.96,-2.4,-4.8,-6.24,-6.72,-6.72]},{"name":"Full Treble","default":true,"gains":[-5.76,-5.76,-5.76,-2.4,1.44,6.72,9.6,9.6,9.6,10.08]},{"name":"Laptop Speakers","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Full Bass &amp; Treble","default":true,"gains":[4.32,3.36,0,-4.32,-2.88,0.96,4.8,6.72,7.2,7.2]}],"whitelist":[]})</script></svg>